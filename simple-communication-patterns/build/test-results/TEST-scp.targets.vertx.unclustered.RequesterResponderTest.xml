<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="scp.targets.vertx.unclustered.RequesterResponderTest" tests="8" skipped="1" failures="0" errors="0" timestamp="2015-12-05T01:30:04" hostname="DESKTOP-PE2SLM5" time="0.094">
  <properties/>
  <testcase name="testExcessLoad" classname="scp.targets.vertx.unclustered.RequesterResponderTest" time="0.031"/>
  <testcase name="testRemoteUnknownFailure" classname="scp.targets.vertx.unclustered.RequesterResponderTest" time="0.016"/>
  <testcase name="testLocalTimeOut" classname="scp.targets.vertx.unclustered.RequesterResponderTest" time="0.0">
    <skipped/>
  </testcase>
  <testcase name="testStaleData" classname="scp.targets.vertx.unclustered.RequesterResponderTest" time="0.0"/>
  <testcase name="testDataUnavailable" classname="scp.targets.vertx.unclustered.RequesterResponderTest" time="0.0"/>
  <testcase name="testSuccessfulRequest" classname="scp.targets.vertx.unclustered.RequesterResponderTest" time="0.0"/>
  <testcase name="testFastRequest" classname="scp.targets.vertx.unclustered.RequesterResponderTest" time="0.016"/>
  <testcase name="testRemoteTimeOut" classname="scp.targets.vertx.unclustered.RequesterResponderTest" time="0.031"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[[Test worker] INFO scp.targets.vertx.CommunicationManagerImpl - Done setting up vertx eventbus
[vert.x-eventloop-thread-1] WARN scp.impl.ResponderInvoker - Dropping 2-th reception
[Test worker] INFO scp.targets.vertx.CommunicationManagerImpl - Done setting up vertx eventbus
[vert.x-eventloop-thread-2] ERROR scp.impl.ResponderInvoker - Failed to handle 1-th reception
java.util.concurrent.ExecutionException: java.lang.RuntimeException: Don't Panic! This exception is good :)
	at java.util.concurrent.FutureTask.report(FutureTask.java:122)
	at java.util.concurrent.FutureTask.get(FutureTask.java:206)
	at scp.impl.ResponderInvoker.invokeHandler(ResponderInvoker.java:100)
	at scp.impl.ResponderInvoker.serviceRequest(ResponderInvoker.java:87)
	at scp.targets.vertx.CommunicationManagerImpl.lambda$registerResponder$17(CommunicationManagerImpl.java:163)
	at io.vertx.core.eventbus.impl.EventBusImpl$HandlerRegistration.handleMessage(EventBusImpl.java:1121)
	at io.vertx.core.eventbus.impl.EventBusImpl$HandlerRegistration.handle(EventBusImpl.java:1115)
	at io.vertx.core.eventbus.impl.EventBusImpl.lambda$doReceive$179(EventBusImpl.java:755)
	at io.vertx.core.impl.ContextImpl.lambda$wrapTask$16(ContextImpl.java:335)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:358)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:357)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.RuntimeException: Don't Panic! This exception is good :)
	at scp.api.RequesterResponderTest$3.respond(RequesterResponderTest.java:163)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	... 1 more
[Test worker] INFO scp.targets.vertx.CommunicationManagerImpl - Done setting up vertx eventbus
[Test worker] INFO scp.targets.vertx.CommunicationManagerImpl - Done setting up vertx eventbus
[Test worker] INFO scp.impl.RequestRequester - Handling stale 1-th response
[Test worker] INFO scp.targets.vertx.CommunicationManagerImpl - Done setting up vertx eventbus
[Test worker] INFO scp.targets.vertx.CommunicationManagerImpl - Done setting up vertx eventbus
[Test worker] INFO scp.targets.vertx.CommunicationManagerImpl - Done setting up vertx eventbus
[Test worker] WARN scp.impl.RequestRequester - Dropping 2-th request
[Test worker] INFO scp.targets.vertx.CommunicationManagerImpl - Done setting up vertx eventbus
[vert.x-eventloop-thread-1] WARN scp.impl.ResponderInvoker - Timed out handling 1-th reception
]]></system-err>
</testsuite>
